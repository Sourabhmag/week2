package com.BridgeLabz.DataStructurePrograms;

import com.BridgeLabz.utility.Util;

public class HashingFunction {
	static int size;
	static Util table[] = new Util[10];
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//System.out.println("Enter the size of hash table");
		//size = Util.readInt();
		//Util table[] = new Util[size];
		HashingFunction.addToHashTable(70);
		HashingFunction.addToHashTable(71);
		HashingFunction.addToHashTable(72);
		HashingFunction.addToHashTable(73);
		HashingFunction.addToHashTable(74);
		HashingFunction.addToHashTable(75);
		HashingFunction.addToHashTable(76);
		HashingFunction.addToHashTable(77);
		HashingFunction.addToHashTable(78);
		HashingFunction.addToHashTable(79);
		HashingFunction.addToHashTable(80);
		
	}
	
	

	public static void addToHashTable(int item)
	{
		int poped_item,slot = item%11;
		if(table[slot].isEmpty())
		{
			System.out.println("Slot is empty");
		}
		else
		{
			if(table[slot].search(item))
			{
				poped_item=table[slot].pop(Util.index(item));
			}
			else
			{
				poped_item=item;
				table[slot].addUnordered(item);
			}
		}
	}
	public static int getitem(Util table[],int item)
	{
		int poped_item=0,choice,slot = item%11;
		if(table[slot].isEmpty())
		{
			System.out.println("Slot is empty");
		}
		else
		{
			if(table[slot].search(item))
			{
				System.out.println(item+" is present");
				System.out.println("Enter your choice\n1)Push item\n2)Pop item");
				choice = Util.readInt();
				switch(choice)
				{
				case 1 : table[slot].push(item);break;
				case 2 : poped_item=table[slot].pop(Util.index(item));break;
				}
			}
		}
		return poped_item;
	}

}
